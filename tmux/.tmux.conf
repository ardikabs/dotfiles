# -----------------------------------------------------------------------------
# Plugin Manager - https://github.com/tmux-plugins/tpm
# In order to use the plugins below you need to install TPM and the plugins.
#   Step 1) git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
#   Step 2) Reload tmux if it's already started with `r
#   Step 3) Launch tmux and hit `I (capital i) to fetch any plugins
# -----------------------------------------------------------------------------

# List of plugins.
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'samoshkin/tmux-plugin-sysstat'

# Initialize TPM (keep this line at the very bottom of your tmux.conf).
run -b '~/.tmux/plugins/tpm/tpm'

# -------------------------------
# Global Options
# -------------------------------

# Start window and panes from 1 instead 0
set -g base-index 1
set -g pane-base-index 1

# Remove delay on switching window
set -sg escape-time 0

# Set scroll history limit in the buffer
set -g history-limit 10000

# Enable color support inside of tmux.
set -g default-terminal "screen-256color"

# Set mouse support
set -g mouse on

# Set mode to support vi/m
set -g mode-keys vi
set -g status-keys vi

# Move copy mode to different key binding
bind C-v copy-mode
bind -T copy-mode-vi 'v' send -X begin-selection     # Begin selection in copy mode.
bind -T copy-mode-vi 'C-v' send -X rectangle-toggle  # Begin selection in copy mode.
bind -T copy-mode-vi 'y' send -X copy-selection      # Yank selection in copy mode.

# -------------------------------
# Key binding
# -------------------------------

# Unbind default key
unbind C-b
unbind '"'   # split-window vertical
unbind '%'   # split-window horizontal
unbind '}'   # swap-pane -D
unbind '{'   # swap-pane -U
unbind 'n'   # next-window
unbind 'p'   # previous-window
unbind 'l'   # last-window
unbind 'o'   # focus thru panes
unbind '&'   # kill-window
unbind '['   # copy-mode
unbind '#'   # list-buffer
unbind '='   # choose-buffer
unbind ';'   # move to previous active pane"

# Remap prefix with Ctrl-a
bind C-a send-prefix
set -g prefix C-a

# Session creation
bind -n C-n command-prompt -p "open new session:" "new-session -s '%%'"

# Window creation
bind Q confirm-before -p "kill-session #S? (y/n)" kill-session
bind X confirm-before -p "kill-window #W? (y/n)" kill-window
bind x confirm-before -p "kill-pane #P? (y/n)" kill-pane
bind M-X confirm-before -p "kill other windows ? (y/n)" "kill-window -a"
bind M-x confirm-before -p "kill other panes ? (y/n)" "kill-pane -a"
bind -r t new-window

# Window movement
## primary
bind -r C-h swap-window -t :-
bind -r C-l swap-window -t :+
bind -r [ select-window -t :-
bind -r ] select-window -t :+
bind -r C-[ select-window -t :-
bind -r C-] select-window -t :+

## secondary
bind -r C-Up swap-window -t :-
bind -r C-Down swap-window -t :+
bind -r C-Left select-window -t :-
bind -r C-Right select-window -t :+

# Panes creation
bind -r | split-window -h
bind -r - split-window -v

# Pane movement
bind -r C-h select-pane -L
bind -r C-j select-pane -D
bind -r C-k select-pane -U
bind -r C-l select-pane -R

bind -n M-Left select-pane -L
bind -n M-Down select-pane -D
bind -n M-Up select-pane -U
bind -n M-Right select-pane -R

# Set resize panes
bind -r M-h resize-pane -L 10
bind -r M-j resize-pane -D 10
bind -r M-k resize-pane -U 10
bind -r M-l resize-pane -R 10

# Synchronize panes shortcut
bind * set synchronize-pane

# Select panes shortcut
bind o command-prompt -p "select pane to:" "selectp -t '%%'"

# Swap panes shortcut
bind p command-prompt -p "swap pane to:" "swapp -t '%%'"

# Join panes shortcut
bind @ command-prompt -p "join pane to:" "join -t ':%%'"

# Break pane to new window shortcut
bind '#' break-pane -t :

# Send copy result (tmux buffer) to clipboard (system buffer)
bind c run-shell "tmux show-buffer | if [ `uname -s` = 'Linux' ]; then xclip -sel clip -i > /dev/null; elif [ `uname -s` = 'Darwin' ]; then pbcopy; fi" \; display-message "Buffer copied to clipboard!"

# Edit configuration and reload
bind C-e new-window -n 'tmux.conf' "$SHELL -c '\${EDITOR:-vim} ~/.tmux.conf && tmux source ~/.tmux.conf && tmux display-message \"Configuration Reloaded\"'"

# Reload config file
bind r source-file ~/.tmux.conf \; display-message "Configuration Reloaded"

# -------------------------------
# Command Aliases
# -------------------------------
set -s command-alias[100] kp="kill-pane"
set -s command-alias[101] mp="movep"
set -s command-alias[102] sp="swapp"

# -------------------------------
# Decoration Styles
# -------------------------------
color_main="colour185" # orange
color_secondary="colour235" # purple
color_dark="colour232" # black
color_light="white"
color_window_off_indicator="colour088"

wg_user_host="#[fg=$color_secondary]#(whoami)#[default]@#H"
wg_is_zoomed="#[fg=$color_main,bg=$color_secondary]#{?window_zoomed_flag,[Z],}#[default]"
wg_is_keys_off="#[fg=$color_light,bg=$color_window_off_indicator]#([ $(tmux show-option -qv key-table) = 'off' ] && echo 'OFF')#[default]"
wg_default="#[bg=colour236] #[bg=colour235]#[fg=colour185] #{sysstat_cpu}#[bg=colour235]#[fg=colour185] | #{sysstat_mem}#[bg=colour235]#[fg=colour185] | #{sysstat_swap}#[bg=colour235]#[fg=colour185] | %b %d %H:%M  "

# Status bar optimized
set -g status-fg white
set -g status-bg black
set -g status-position top
set -g status-left ' #[fg=green]#{session_name} #[fg=white]| '
set -g status-left-length 100
set -g status-right "#{prefix_highlight} $wg_is_keys_off $wg_is_zoomed $wg_default"
set -g status-right-length 100
#set -g status-right '#[bg=colour236] #[bg=colour235]#[fg=colour185] #(date "+%a %b %d %H:%M")'

set -g pane-border-status bottom
set -g pane-border-format "#{pane_index} #{pane_current_command}"
set -g pane-active-border-style fg=colour185
set -g pane-border-style fg=colour243
set -g window-status-current-style fg=colour223,bold

# -------------------------------
# Plugin Configuration
# -------------------------------

# Copy mode
set -g @yank_selection_mouse 'primary' # or 'primary' or 'secondary'

# Configure tmux-prefix-highlight colors
set -g @prefix_highlight_output_prefix '['
set -g @prefix_highlight_output_suffix ']'
set -g @prefix_highlight_fg "$color_main"
set -g @prefix_highlight_bg "$color_secondary"
set -g @prefix_highlight_show_copy_mode 'on'
set -g @prefix_highlight_copy_mode_attr "fg=$color_main,bg=$color_secondary"
